// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> noirSetupSrs({
  required String circuitBytecode,
  String? srsPath,
  required bool recursion,
}) => RustLib.instance.api.crateNoirSetupSrs(
  circuitBytecode: circuitBytecode,
  srsPath: srsPath,
  recursion: recursion,
);

Future<void> noirSetupSrsWithSize({
  required int circuitSize,
  String? srsPath,
}) => RustLib.instance.api.crateNoirSetupSrsWithSize(
  circuitSize: circuitSize,
  srsPath: srsPath,
);

Future<Uint8List> noirGetVerificationKey({
  required String circuitBytecode,
  required bool disableZk,
  required bool lowMemoryMode,
}) => RustLib.instance.api.crateNoirGetVerificationKey(
  circuitBytecode: circuitBytecode,
  disableZk: disableZk,
  lowMemoryMode: lowMemoryMode,
);

Future<Uint8List> noirWitnessFromStrings({
  required List<String> witnessStrings,
}) => RustLib.instance.api.crateNoirWitnessFromStrings(
  witnessStrings: witnessStrings,
);

Future<Uint8List> noirProve({
  required String circuitBytecode,
  required List<int> initialWitnessBytes,
  required List<int> verificationKey,
  required bool disableZk,
  required bool lowMemoryMode,
}) => RustLib.instance.api.crateNoirProve(
  circuitBytecode: circuitBytecode,
  initialWitnessBytes: initialWitnessBytes,
  verificationKey: verificationKey,
  disableZk: disableZk,
  lowMemoryMode: lowMemoryMode,
);

Future<bool> noirVerifyProof({
  required List<int> proof,
  required List<int> verificationKey,
  required bool disableZk,
}) => RustLib.instance.api.crateNoirVerifyProof(
  proof: proof,
  verificationKey: verificationKey,
  disableZk: disableZk,
);
